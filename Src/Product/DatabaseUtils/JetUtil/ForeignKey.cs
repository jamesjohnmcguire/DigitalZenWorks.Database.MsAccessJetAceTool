using System;
using System.Collections;

namespace JetUtil
{
	/////////////////////////////////////////////////////////////////////////
	/// <summary>
	/// Represents a foreign key
	/// </summary>
	/////////////////////////////////////////////////////////////////////////
	public class ForeignKey
	{
		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Foreign Key Name
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public string m_Name;

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Column Name
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public string m_ColumnName;

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Parent Table
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public string m_ParentTable;

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Parent Table Column
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public string m_ParentTableColumn;

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Cascade On Delete
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public bool m_CascadeOnDelete;

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Cascade On Update
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public bool m_CascadeOnUpdate;

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Default Constructor
		/// </summary>
		/// <param name="Name"></param>
		/// <param name="ColumnName"></param>
		/// <param name="ParentTable"></param>
		/// <param name="ParentTableColumn"></param>
		/// <param name="cascadeDelete"></param>
		/// <param name="cascadeUpdate"></param>
		/////////////////////////////////////////////////////////////////////
		public ForeignKey(
			string Name,
			string ColumnName,
			string ParentTable,
			string ParentTableColumn,
			bool cascadeDelete,
			bool cascadeUpdate)
		{
			m_Name = Name;
			m_ColumnName = ColumnName;
			m_ParentTable = ParentTable;
			m_ParentTableColumn = ParentTableColumn;
			m_CascadeOnDelete = cascadeDelete;
			m_CascadeOnUpdate = cascadeUpdate;
		}
	}
}
